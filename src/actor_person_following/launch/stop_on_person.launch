<launch>
	<!-- ARGS -->
  <arg name="cam_source_topic" default="/cam_pub/image_raw" />
  <!-- DBW system -->
  <arg name="live" default="true" />
  <arg name="load_urdf" default="true" />
  <arg name="ulc" default="true" />
  <arg name="vehicle_ns" default="vehicle" />
  <arg name="can_ns" default="/can_bus_dbw" />

  <!-- CAN Bus Hardware -->
  <arg name="filter_can" default="true" />
  <node if="$(arg live)" pkg="dataspeed_can_usb" type="can_node" name="can_node" output="screen">
    <remap from="can_bus_1" to="can_bus_1"/>
    <param name="bitrate_1" value="0" />
    <remap from="can_bus_2" to="can_bus_2"/>
    <param name="bitrate_2" value="0" />
    <remap from="can_bus_3" to="$(arg can_ns)"/>
    <param name="bitrate_3" value="500000" />
    <param name="channel_3_mask_0"  value="0x800007E0" if="$(arg filter_can)" />
    <param name="channel_3_match_0" value="0x00000060" if="$(arg filter_can)" /> <!-- SID 0x060 to 0x07F -->
    <remap from="can_bus_4" to="can_bus_4"/>
    <param name="bitrate_4" value="0" />
  </node>

  <!-- Vehicle Interface -->
  <arg name="urdf_model" default="gem" />
  <arg name="frame_id" default="base_footprint"/>
  <arg name="warn_cmds" default="true"/>
  <arg name="buttons" default="true"/>
  <arg name="pedal_luts"    default="false"/>
  <arg name="ackermann_wheelbase" default="3.08864"/> <!-- TODO -->
  <arg name="ackermann_track"     default="1.73228"/> <!-- TODO -->
  <arg name="steering_ratio"      default="16.2"/> <!-- TODO -->
  <group ns="$(arg vehicle_ns)" >
    <node pkg="dbw_polaris_can" type="dbw_node" name="dbw_node" output="screen">
      <remap from="can_rx" to="$(arg can_ns)/can_rx"/>
      <remap from="can_tx" to="$(arg can_ns)/can_tx"/>
      <param name="frame_id" value="$(arg frame_id)" />
      <param name="warn_cmds" value="$(arg warn_cmds)" />
      <param name="buttons" value="$(arg buttons)" />
      <param name="pedal_luts" value="$(arg pedal_luts)" />
      <param name="ackermann_wheelbase" value="$(arg ackermann_wheelbase)" />
      <param name="ackermann_track" value="$(arg ackermann_track)" />
      <param name="steering_ratio" value="$(arg steering_ratio)" />
    </node>
    <node if="$(arg ulc)" pkg="dataspeed_ulc_can" type="ulc_node" name="ulc_node" output="screen">
      <remap from="can_rx" to="$(arg can_ns)/can_rx"/>
      <remap from="can_tx" to="$(arg can_ns)/can_tx"/>
    </node>
    <include if="$(arg load_urdf)" file="$(find dbw_polaris_description)/launch/urdf.launch" >
      <arg name="urdf_model" value="$(arg urdf_model)" />
    </include>
  </group>

	<!-- DARKNET YOLO -->

  <!-- Console launch prefix -->
  <arg name="launch_prefix" default=""/>
  <arg name="image" default="/camera/rgb/image_raw" />

  <!-- Config and weights folder. -->
  <arg name="yolo_weights_path"          default="$(find darknet_ros)/yolo_network_config/weights"/>
  <arg name="yolo_config_path"           default="$(find darknet_ros)/yolo_network_config/cfg"/>

  <!-- ROS and network parameter files -->
  <arg name="ros_param_file"             default="$(find darknet_ros)/config/ros.yaml"/>
  <arg name="network_param_file"         default="$(find darknet_ros)/config/yolov3.yaml"/>

  <!-- Load parameters -->
  <rosparam command="load" ns="darknet_ros" file="$(arg ros_param_file)"/>
  <rosparam command="load" ns="darknet_ros" file="$(arg network_param_file)"/>

  <!-- Start darknet and ros wrapper -->
  <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros" output="screen" launch-prefix="$(arg launch_prefix)">
    <param name="subscribers/camera_reading/topic" value="$(arg cam_source_topic)" />
    <param name="weights_path"          value="$(arg yolo_weights_path)" />
    <param name="config_path"           value="$(arg yolo_config_path)" />
    <remap from="camera/rgb/image_raw"  to="$(arg image)" />
  </node>

  <!--<node name="republish" type="republish" pkg="image_transport" output="screen" 	args="compressed in:=/front_camera/image_raw raw out:=/camera/image_raw" /> -->

	<!-- CAMERA PUBLISHER -->

  <!-- launch the node -->
  <node name="cam_pub" pkg="simple_camera_publisher" type="cam_pub" respawn="true" respawn_delay="10" output="screen">
      <param name="source" type="string" value="" />
      <param name="res_wid" type="int" value="640" />
      <param name="res_hgt" type="int" value="480" />
  </node>

	<!-- PERSON DETECTOR -->
  <node name="detection_reporter_node" pkg="actor_person_following" type="detection_reporter_node" >
    <param name="cam_topic" type="string" value="$(arg cam_source_topic)" />
    <param name="color_spot_width" type="int" value="20" />
    <param name="smoothing_timeout" type="double" value="0.1" />
    <param name="target_class" type="string" value="person" />
    <param name="sat_adj" type="double" value="3" />
  </node>
  <node name="stop_for_person_node" pkg="actor_person_following" type="stop_for_person_node" >
    <param name="start_active" type="int" value="1" />
    <param name="twist_topic" type="string" value="/follower/twist" />
    <param name="start_topic" type="string" value="/follower/start" />
    <param name="stop_thresh" type="double" value="1" />
    <param name="speed" type="double" value="0.25" />
    <param name="steerMult" type="double" value="1" />
    <param name="timeout" type="double" value="99" />
    <param name="looprate" type="int" value="5" />
    <param name="proximity_cooldown" type="double" value="5" />
    <param name="disp_msg_topic" type="string" value="/display/text/msg" />
    <param name="disp_rgb_topic" type="string" value="/display/text/color" />
    <param name="color_sel" type="int" value="2" />
    <param name="color_fallback" type="int" value="0" />
    <param name="smoothing_timeout" type="double" value="0.1" />
  </node>
</launch>
